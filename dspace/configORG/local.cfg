# EXAMPLE "local.cfg" for DSpace.
#
# Any configurations added to this file will automatically OVERRIDE configurations
# of the same name in any of the DSpace *.cfg files. This includes overriding
# settings in any of these files:
#    * [dspace]/config/dspace.cfg
#    * Any configuration file that is included in 'dspace.cfg'
#     (See "include = [filepath]" settings near the end of dspace.cfg.
#      By default, it includes all [dspace]/config/modules/*.cfg files)
#    * Spring Boot's application.properties
#      ([dspace-src]/dspace-server-webapp/src/main/resources/application.properties)
#
# By default, this EXAMPLE file includes a number of commonly overridden configurations.
# * ADD configurations by simply copying them into this file from any existing *.cfg file.
# * REMOVE configurations by simply commenting them out or deleting them below.
#
# Any commented out settings in this file are simply ignored. A configuration
# will only override another configuration if it has the EXACT SAME key/name.
# For example, including "dspace.dir" in this local.cfg will override the
# default value of "dspace.dir" in the dspace.cfg file.
# Similarly, including "oai.solr.url" in this local.cfg will override the
# default value of "oai.solr.url" in the modules/oai.cfg file.


##########################################################################
# ADDED STELI to override all *.cfg files as in old config for DSpace 7.0
##########################################################################

#for RSS Feeds
webui.opensearch.enable = true
#use local "fake" handle
webui.feed.localresolve = true
webui.feed.item.title = dc.title
webui.feed.item.date = dc.date.issued
webui.feed.item.description = dc.title, dc.contributor.author, dc.contributor.editor, dc.description.abstract, dc.description
webui.feed.item.author = dc.contributor.author
webui.feed.item.dc.creator = dc.contributor.author
webui.feed.item.dc.date = dc.date.issued
webui.feed.item.dc.description = dc.description.abstract
#URL where opensearch is available => mydspace.com/server/opensearch
websvc.opensearch.svccontext = opensearch
#Context for HTML request URLs. Change only for non-standard servlet mapping.
websvc.opensearch.uicontext = simple-search
#Present autodiscovery link in every page head.
websvc.opensearch.autolink = true
#Number of hours to retain results before recalculating. This applies to the Manakin interface only.
websvc.opensearch.validity = 48
websvc.opensearch.shortname = FAU
websvc.opensearch.longname = ${dspace.name}
websvc.opensearch.description = ${dspace.name} repository
websvc.opensearch.faviconurl = http://www.dspace.org/images/favicon.ico
websvc.opensearch.samplequery = data
websc.opensearch.tags = IR FAU
websvc.opensearch.formats = html,atom,rss


# If enabled, the logging and the Solr statistics system will look for an X-Forwarded-For header.
# If it finds it, it will use this for the user IP address.
# NOTE: This is required to be enabled if you plan to use the Angular UI, as the server-side rendering provided in
# Angular always passes the original client IP Address to the REST API via the X-Forwarded-For header.
useProxies = true

# If "useProxies" is enabled, the authentication and statistics logging code will read the X-Forwarded-For header in
# order to determine the correct client IP address. But they will only use that header value when the request is coming
# from a trusted proxy server location.
# By default, ONLY requests from localhost (127.0.0.1) will be trusted. However, you can use this setting to specify
# additional IP addresses (or ranges) whose X-Forwarded-For header values will also be trusted.
# You can specify a range by only listing the first three ip-address blocks, e.g. 128.177.243
# You can list multiple IP addresses or ranges by comma-separating them.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
proxies.trusted.ipranges = 127.0.0.1

# Whether or not to automatically include the IP address of ${dspace.ui.url} in the list of trusted ip ranges.
# This defaults to "true", as some features in the Angular UI (like authentication) require sending an X-Forwarded-For
# header. Therefore, only disable this if you are not using the Angular UI, or you wish to specify its IP manually
# in the "proxies.trusted.ipranges" configuration.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
proxies.trusted.include_ui_ip = true

# logo used in RSS Feeds
webui.feed.logo.url = ${dspace.url}/assets/images/fau_img/fau400.png

# Discovery relies on a Solr index for storage and retrieval of its information. This parameter determines the location of the Solr index.
discovery.search.server = http://localhost:8983/solr/search

# set DataCite.publisher
crosswalk.dissemination.DataCite.publisher = FAU Erlangen

# URL Solr works, to get statistics info
solr-statistics.server = http://localhost:8983/solr/statistics

# see usage-statistics only if Admin in UI
usage-statistics.authorization.admin.usage = true
# see search statistics in UI only if Admin
usage-statistics.authorization.admin.search = true
# see workflow statistics in UI only if Admin
usage-statistics.authorization.admin.workflow = true
# DONT log bots in statistics
usage-statistics.logBots = false
# reset statistics every year
usage-statistics.shardedByYear = false
# only Admin can have the report file
report.public = false
# directory where live reports are stored
report.dir = ${dspace.dir}/reports/

# after download .mmdb and cron update .mmdb, provide path to .mmdb for location statistics
usage-statistics.dbfile = /usr/local/resources_steli_dspace/GeoLite2-City_20220705/GeoLite2-City.mmdb

# let admin community create subelements (ex. collection)
core.authorization.community-admin.create-subelement = true
# let admin community delete subelements (ex. collection)
core.authorization.community-admin.delete-subelement = true
# let admin community update community policies
core.authorization.community-admin.policies = true
# let admin community update group of admins of community
core.authorization.community-admin.admin-group = true
# let admin community update policies of collections
core.authorization.community-admin.collection.policies = true
# let admin community update template of collections
core.authorization.community-admin.collection.template-item = true
# let admin community update group submitters of collections
core.authorization.community-admin.collection.submitters = true
# let admin community update workflow of collections
core.authorization.community-admin.collection.workflows = true
# let admin community update group admins of collections
core.authorization.community-admin.collection.admin-group = true
# let admin community delete items children
core.authorization.community-admin.item.delete = true
# let admin community withdraw items children
core.authorization.community-admin.item.withdraw = true
# let admin community reinstate items children
core.authorization.community-admin.item.reinstate = true
# let admin from group admin to manage policies in items children
core.authorization.community-admin.item.policies = true
# let admin from group admin to create bitstreams in items children
core.authorization.community-admin.item.create-bitstream = true
# let admin from group admin to delete bitstreams in items children
core.authorization.community-admin.item.delete-bitstream = true

# Sherpa Romeo API Key to check license of new submitted items via ISSN provided in dc.identifier.issn. stelica.valianos@fau.de
sherpa.romeo.apikey = 646BDADE-FC59-11EC-A606-62963307877B

# For backwards compatibility, the subscription emails by default include any modified items
# uncomment the following entry for only new items to be emailed
eperson.subscription.onlynew = true

# whether to display the contents of the licence bundle (often just the deposit
# licence in standard DSpace installation)
webui.licence_bundle.show = false

# This default configuration hides the dc.description.provenance field,
# since that usually contains email addresses which ought to be kept
# private and is mainly of interest to administrators:
metadata.hide.dc.description.provenance = true
metadata.hide.person.email = true


# here authentication.cfg overriden
# Authentication by Password (encrypted in DSpace's database). See authentication-password.cfg for default configuration.
# Enabled by default (to disable, either comment out, or define a new list of AuthenticationMethod plugins in your local.cfg)
# Order of authentication method matters -> here first try via PasswordAuthenticaiton, then via Shibboleth
plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.PasswordAuthentication, org.dspace.authenticate.ShibAuthentication

# This property enables/disables encryption of the payload in a stateless token. Enabling this makes the data encrypted
# and unreadable by the receiver, but makes the token larger in size. false by default
jwt.login.encryption.enabled = false

# This enables compression of the payload of a jwt, enabling this will make the jwt token a little smaller at the cost
# of some performance, this setting WILL ONLY BE used when encrypting the jwt.
jwt.login.compression.enabled = true

# Expiration time of a token in milliseconds
jwt.login.token.expiration = 1800000

# This property enables/disables encryption of the payload in a stateless token. Enabling this makes the data encrypted
# and unreadable by the receiver, but makes the token larger in size. false by default
jwt.shortLived.encryption.enabled = false

# This enables compression of the payload of a jwt, enabling this will make the jwt token a little smaller at the cost
# of some performance, this setting WILL ONLY BE used when encrypting the jwt.
jwt.shortLived.compression.enabled = true

# Expiration time of a token in milliseconds
jwt.shortLived.token.expiration = 2000


# here authentication-shibboleth.cfg overriden
# Whether to use lazy sessions or active sessions.
authentication-shibboleth.lazysession = true

# The url to start a shibboleth session (only for lazy sessions)
# This must contain an absolute URL (e.g. http://dsapce-org/Shibboleth.sso/Login) or
# a relative path that start with slash (e.g. /Shibboleth.sso/Login)
authentication-shibboleth.lazysession.loginurl = /Shibboleth.sso/Login

# Force HTTPS when authenticating (only for lazy sessions)
authentication-shibboleth.lazysession.secure = true

# Authentication headers for Mail, NetID, and Tomcat's Remote User.
# Supply all parameters possible.
# authentication-shibboleth.netid-header = SHIB-NETID
authentication-shibboleth.netid-header = uid

# authentication-shibboleth.email-header = SHIB-MAIL
authentication-shibboleth.email-header = mail
authentication-shibboleth.email-use-tomcat-remote-user = false
# authentication-shibboleth.email-use-tomcat-remote-user = true

# Should we allow new users to be registered automatically?
authentication-shibboleth.autoregister = true

# Sword compatibility will allow this authentication method to work when using
# sword. Sort relies on username and password based authentication and is
# entirely incapable of supporting shibboleth. This option allows you to
# authenticate username and passwords for sword sessions without adding
# another authentication method onto the stack. You will need to ensure that
# a user has a password. One way to do that is to create the user via the
# create-administrator command line command and then edit their permissions.
authentication-shibboleth.sword.compatibility = false

# Metadata Headers
# Shibboleth-based headers for the first and last name attirbutes
# authentication-shibboleth.firstname-header = SHIB-GIVENNAME
authentication-shibboleth.firstname-header = givenName
# authentication-shibboleth.lastname-header = SHIB-SURNAME
authentication-shibboleth.lastname-header = sn

# Additional user attributes mapping, multiple attributes may be stored
# for each user. The left side is the Shibboleth-based metadata Header
# and the right side is the eperson metadata field to map the attribute to.
# authentication-shibboleth.eperson.metadata = \
# SHIB-telephone => eperson.phone, \
# SHIB-cn => cn

# If the eperson metadata field is not found, should it be automatically created?
authentication-shibboleth.eperson.metadata.autocreate = true

# Shibboleth attributes are by default UTF-8 encoded. Some servlet container
# automatically converts the attributes from ISO-8859-1 (latin-1) to UTF-8.
# As the attributes already were UTF-8 encoded it may be necessary to reconvert
# them. If you detect problems with special characters in shibboleth attributes
# set this to true (default to false).
authentication-shibboleth.reconvert.attributes = false

# The shibboleth header to do role-based mappings
# authentication-shibboleth.role-header = SHIB-SCOPED-AFFILIATION
authentication-shibboleth.role-header = role

# Whether to ignore the attribute's scope or value.
authentication-shibboleth.role-header.ignore-scope = true
# authentication-shibboleth.role-header.ignore-value = false

# Default mappings of roles values to a comma separated list of DSpace group names (Case Sensitive).
# authentication-shibboleth.role.faculty = Faculty, Member
# authentication-shibboleth.role.staff = Staff, Member, OtherDSpaceGroup
# authentication-shibboleth.role.student = Students, Member, OtherDSpaceGroup
authentication-shibboleth.role.employee = Editor
authentication-shibboleth.role.manager = Manager


# here curate.cfg overriden
# NOTE: Other configurations can append to this list of default tasks by simply
# adding their own additional values of "plugin.named.org.dspace.curate.CurationTask"
plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.NoOpCurationTask = noop
plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.ProfileFormats = profileformats
plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.RequiredMetadata = requiredmetadata
# plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.ClamScan = vscan
# plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.MicrosoftTranslator = translate
plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.MetadataValueLinkChecker = checklinks
# add new tasks here (or in additional config files) @Steli
#plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.MapToSeries = mapserie
plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.ArchiveOriginalBitstreams = archive
plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.DnbAccessRights = dnbaccess
plugin.named.org.dspace.curate.CurationTask = org.dspace.ctask.general.UpdateHandleFromDB = updateHandleFromDB

# task queue implementation
plugin.single.org.dspace.curate.TaskQueue = org.dspace.curate.FileTaskQueue

# directory location of curation task queues
curate.taskqueue.dir = ${dspace.dir}/ctqueues


# here oai.cfg overriden
# Whether or not to enable the OAI module
# When "true", the OAI module is accessible on ${oai.path}
# When "false" or commented out, OAI is disabled/inaccessible.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
oai.enabled = true

# Path where OAI module is available
# Defaults to "oai", which means the OAI module would be available
# at ${dspace.server.url}/oai/
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
oai.path = oai

# Storage: solr | database (solr is recommended)
oai.storage=solr

# The base URL of the OAI webapp (do not include the context e.g. /request, /openaire, etc).
# Note: Comment out if you want to fallback to the request's URL.
oai.url = ${dspace.server.url}/${oai.path}

# Base solr index
oai.solr.url = ${solr.server}/oai

# Base Configuration Directory
oai.config.dir = ${dspace.dir}/config/crosswalks/oai

# For OAI-PMH the base link to create the download link
oai.bitstream.baseUrl = https://repotest.ub.fau.de

# notify other reviers if task returned to pool by another reviewr
workflow.notify.returned.tasks = true

# Description
oai.description.file = ${dspace.dir}/config/crosswalks/oai/description.xml

# Cache enabled?
oai.cache.enabled = true

# Base Cache Directory
oai.cache.dir = ${dspace.dir}/var/oai

# Size of batches to commit to solr at a time
oai.import.batch.size = 1000

# Crosswalk settings; the {name} value must correspond to a declared ingestion crosswalk
# oai.harvester.metadataformats.{name} = {namespace},{optional display name}
# The display name is only used in the xmlui; for the jspui there are entries in the
# Messages.properties in the form jsp.tools.edit-collection.form.label21.select.{name}
oai.harvester.metadataformats.dc = http://www.openarchives.org/OAI/2.0/oai_dc/\, Simple Dublin Core
oai.harvester.metadataformats.qdc = http://purl.org/dc/terms/\, Qualified Dublin Core
oai.harvester.metadataformats.dim = http://www.dspace.org/xmlns/dspace/dim\, DSpace Intermediate Metadata

# Determines whether the harvester scheduling process should be started
# automatically when the DSpace webapp is deployed.
# default: false
oai.harvester.autoStart = false

# When harvesting an item that contains an unknown schema or field within a schema what
# should the harvester do? Either add a new registry item for the field or schema, ignore
# the specific field or schema (importing everything else about the item), or fail with
# an error. The default value if undefined is: fail.
# Possible values: 'fail', 'add', or 'ignore'
oai.harvester.unknownField  = add
oai.harvester.unknownSchema = fail

# here solrauthority.cfg overriden
# Update item metadata displayed values (not the authority keys)
# with the lasted cached versions when running the UpdateAuthorities index script
solrauthority.auto-update-items = false

# here swordv2.cfg overriden
# Whether or not to enable the SWORD v2 module
# When "true", the SWORD v2 module is accessible on ${swordv2-server.path}
# When "false" or commented out, SWORD v2 is disabled/inaccessible.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
swordv2-server.enabled = true

# Path where SWORD v2 module is available (in the Spring Server webapp)
# Defaults to "swordv2", which means the SWORD v2 module would be available
# at ${dspace.server.url}/swordv2/
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
swordv2-server.path = swordv2

# The base URL of the SWORD collection.  This is the URL from
# which DSpace will construct the deposit location urls for
# collections.
# The default is {dspace.server.url}/swordv2/collection
# In the event that you are not deploying DSpace as the ROOT
# application in the servlet container, this will generate
# incorrect URLs, and you should override the functionality
# by specifying in full as below: 
# swordv2-server.collection.url = https://repotest.ub.fau.de/server/swordv2/collection/test-fau1743/172
swordv2-server.collection.url = https://repotest.ub.fau.de/server/swordv2/collection

# The base URL of the SWORD service document.  This is the
# URL from which DSpace will construct the service document
# location urls for the site, and for individual collections
# The default is {dspace.server.url}/swordv2/servicedocument
# In the event that you are not deploying DSpace as the ROOT
# application in the servlet container, this will generate
# incorrect URLs, and you should override the functionality
# by specifying in full as below: 	https://repotest.ub.fau.de/server/swordv2/servicedocument ORG
# swordv2-server.servicedocument.url = http://localhost:8080/server/swordv2/servicedocument
swordv2-server.servicedocument.url = https://repotest.ub.fau.de/server/swordv2/servicedocument

# The accept packaging properties, along with their associated
# quality values where appropriate.
# Global settings; these will be used on all DSpace collections
swordv2-server.accept-packaging.collection.METSDSpaceSIP = http://purl.org/net/sword/package/METSDSpaceSIP
swordv2-server.accept-packaging.collection.SimpleZip = http://purl.org/net/sword/package/SimpleZip
swordv2-server.accept-packaging.collection.Binary = http://purl.org/net/sword/package/Binary
# added steli
swordv2-server.accept-packaging.collection.METSMODS = http://purl.org/net/sword/package/METSMODS

# The accept packaging properties for items.  This is used to determine
# which package types are acceptable to deposit into an existing item,
# either adding to or replacing the media resource#
swordv2-server.accept-packaging.item.METSDSpaceSIP = http://purl.org/net/sword/package/METSDSpaceSIP
swordv2-server.accept-packaging.item.SimpleZip = http://purl.org/net/sword/package/SimpleZip
swordv2-server.accept-packaging.item.Binary = http://purl.org/net/sword/package/Binary
# added steli
swordv2-server.accept-packaging.item.METSMODS = http://purl.org/net/sword/package/METSMODS

# A comma separated list of MIME types that SWORD will accept
swordv2-server.accepts = */*

# Should the server offer as the default the list of all Communities
# to a Service Document request.  If false, the server will offer
# the list of all collections, which is the default and recommended
# behaviour at this stage.
# NOTE: a service document for Communities will not offer any viable
# deposit targets, and the client will need to request the list of
# Collections in the target before deposit can continue
swordv2-server.expose-communities = false
swordv2-server.allow-community-deposit = false


# The maximum upload size of a package through the sword interface,
# in bytes
# This will be the combined size of all the files, the metadata and
# any manifest data.  It is NOT the same as the maximum size set
# for an individual file upload through the user interface.  If not
# set, or set to 0, the sword service will default to no limit.
swordv2-server.max-upload-size = 0


# Should DSpace store a copy of the original sword deposit package?
# NOTE: this will cause the deposit process to run slightly slower,
# and will accelerate the rate at which the repository consumes disk
# space.  BUT, it will also mean that the deposited packages are
# recoverable in their original form.  It is strongly recommended,
# therefore, to leave this option turned on.
# NOTE: this affects all incoming deposits, whether they are package
# deposits or not.  That is, if individual files are uploaded to the
# Media Resource, a copy of that file will be stored in the SWORD
# bundle AND into the ORIGINAL bundle.
swordv2-server.keep-original-package = true

# Should the deposit receipt include a verbose description of the deposit?
swordv2-server.verbose-description.receipt.enable = false


# should the error document include a verbose description of the error
swordv2-server.verbose-description.error.enable = true


# The error document can contain an alternate url, which the client
# can use to follow up any issues.
# This is the Contact-Us page on the UI (localise the url space first)
swordv2-server.error.alternate.url = ${dspace.ui.url}/contact


# The URL may have an associated content type; if you know what it
# is, you can enter it here
swordv2-server.error.alternate.content-type = text/html

# Which version of SWORD is being used
swordv2-server.generator.version = 2.0

# The form of authentication to use
# This is normally set to 'Basic' for HTTP Basic
# Other valid values: 'None'
swordv2-server.auth-type = Basic

# The location where uploaded files and packages are
# stored while being processed
swordv2-server.upload.tempdir = ${upload.temp.dir}


# The metadata field in which to store the updated date for
# items deposited via SWORD.
swordv2-server.updated.field = dc.date.updated


# The metadata field in which to store the value of the slug
# header if it is supplied
swordv2-server.slug.field = dc.identifier.slug


# The metadata field in which to store the value of the
# atom entry author if it is supplied
swordv2-server.author.field = dc.contributor.author


# The metadata field in which to store the value of the
# atom entry title if it is supplied
swordv2-server.title.field = dc.title


# Supported packaging formats for the dissemination of packages
swordv2-server.disseminate-packaging.METSDSpaceSIP = http://purl.org/net/sword/package/METSDSpaceSIP
swordv2-server.disseminate-packaging.SimpleZip = http://purl.org/net/sword/package/SimpleZip
# added steli
swordv2-server.disseminate-packaging.METSMODS = http://purl.org/net/sword/package/METSMODS


# Configure the plugins to process incoming packages.  The form of this
# configuration is as per the Plugin Manager's Named Plugin documentation:
# plugin.named.[interface] = [implementation] = [package format identifier] \
# Package ingesters should implement the SWORDIngester interface, and
# will be loaded when a package of the format specified above in:
# swordv2-server.accept-packaging.[package format].identifier = [package format identifier]
# is received.
# In the event that this is a simple file deposit, with no package
# format, then the class named by "SimpleFileIngester" will be loaded
# and executed where appropriate.  This case will only occur when a single
# file is being deposited into an existing DSpace Item
plugin.named.org.dspace.sword2.SwordContentIngester = \
	org.dspace.sword2.SwordMETSContentIngester = http://purl.org/net/sword/package/METSMODS, \
  org.dspace.sword2.SimpleZipContentIngester = http://purl.org/net/sword/package/SimpleZip, \
  org.dspace.sword2.SwordMETSContentIngester = http://purl.org/net/sword/package/METSDSpaceSIP, \
  org.dspace.sword2.BinaryContentIngester = http://purl.org/net/sword/package/Binary
#, \
#  org.dspace.swordpackagers.SwordDocXIngester = application/vnd.openxmlformats-officedocument.wordprocessingml.document, \
#  org.dspace.swordpackagers.SwordXifIngester = image/jpeg

plugin.single.org.dspace.sword2.SwordEntryIngester = \
  org.dspace.sword2.SimpleDCEntryIngester

plugin.single.org.dspace.sword2.SwordEntryDisseminator = \
  org.dspace.sword2.SimpleDCEntryDisseminator

# note that we replace ";" with "_" as ";" is not permitted in the PluginService names
plugin.named.org.dspace.sword2.SwordContentDisseminator = \
  org.dspace.sword2.SimpleZipContentDisseminator = http://purl.org/net/sword/package/SimpleZip, \
  org.dspace.sword2.FeedContentDisseminator = application/atom+xml, \
  org.dspace.sword2.FeedContentDisseminator = application/atom+xml_type_feed

# note that we replace ";" with "_" as ";" is not permitted in the PluginService names
plugin.named.org.dspace.sword2.SwordStatementDisseminator = \
  org.dspace.sword2.AtomStatementDisseminator = atom, \
  org.dspace.sword2.OreStatementDisseminator = rdf, \
  org.dspace.sword2.AtomStatementDisseminator = application/atom+xml_type_feed, \
  org.dspace.sword2.OreStatementDisseminator = application/rdf+xml


# Which bundles should the Statement include in its list of aggregated resources
# The Statement will automatically mark any bitstreams which are in the bundle
# identified by the ${bundle.name} property, provided that bundle is also
# listed here (i.e. if you want Original Deposits to be listed in the Statement
# then you should add the SWORD bundle to this list)
swordv2-server.statement.bundles = ORIGINAL, SWORD, LICENSE


# Workflow manager implementation - tells us what we are allowed to do
# via the SWORDv2 interface
# There are two default workflow managers:
#  - org.dspace.sword2.WorkflowManagerDefault: Only items in submission
#     are allowed to be UPDATED or DELETED using SWORD.
#  - org.dspace.sword2.WorkflowManagerUnrestricted: Items in workflow,
#     in archive, or withdrawn can also be UPDATED or DELETED using
#     SWORD
plugin.single.org.dspace.sword2.WorkflowManager = \
  org.dspace.sword2.WorkflowManagerDefault


# Should the WorkflowManagerDefault allow updates to the item's metadata
# to take place on items which are in states other than the workspace
# (e.g. in the workflow, archive, or withdrawn) ?
swordv2-server.workflowmanagerdefault.always-update-metadata = true


# Should the server allow PUT to individual files?
# If this is enabled, then DSpace may be used with the DepositMO SWORD
# extensions, BUT the caveat is that DSpace does not formally support
# Bitstream replace, so this is equivalent to a DELETE and then a POST,
# which violates the RESTfulness of the server.  The resulting file
# DOES NOT have the same identifier as the file it was replacing.  As such
# it is STRONGLY RECOMMENDED to leave this option turned off unless working
# explicitly with DepositMO enabled client environments
swordv2-server.workflowmanagerdefault.file-replace.enable = false

# Should the sword server enable restore-mode when ingesting new
# packages. If this is enabled the item will be treated as a
# previously deleted item from the repository. If the item had
# previously been assigned a handle then that same handle will be
# restored to activity.
swordv2-server.restore-mode.enable = false


# Used by SimpleDCEntryIngester:
# Which metadata fields can be replaced during a PUT to the Item of an
# Atom Entry document?  Fields listed here are the ones which will be
# removed when a new PUT comes through (irrespective of whether there
# is a new incoming value to replace them)
swordv2-server.metadata.replaceable = dc.description.abstract, \
  						dc.rights, \
  						dc.title.alternative, \
  						dc.identifier.citation, \
  						dc.contributor, \
  						dc.coverage, \
  						dc.contributor.author, \
  						dc.date, \
  						dc.description, \
  						dc.format.extent, \
  						dc.format, dc.identifier, \
  						dc.relation.ispartof, \
  						dc.relation.isreferencedby, \
  						dc.relation.isreplacedby, \
  						dc.relation.isrequiredby, \
  						dc.language, \
  						dc.format.medium, \
  						dc.date.modified, \
  						dc.publisher, \
  						dc.relation.references, \
  						dc.relation, \
  						dc.relation.replaces, \
  						dc.relation.requires, \
  						dc.source, \
  						dc.coverage.spatial, \
  						dc.subject, \
  						dc.coverage.temporal, \
  						dc.title, \
  						dc.type


# order of precedence for importing multipart content.  if entry-first then
# metadata in the package will override metadata in the entry, otherwise
# the entry metadata will be applied before the package metadata, so the
# package may override the metadata supplied in the entry - it depends on
# the specific behaviour of the package ingester selected
# Defaults to false
swordv2-server.multipart.entry-first = false


# if the workflow gets started, should there be a notification
# email sent
swordv2-server.workflow.notify = true


# when content is replaced, should the old version of the content be kept?  This
# creates a copy of the ORIGINAL bundle with the name V_YYYY-MM-DD.X where YYYY-MM-DD
# is the date the copy was created, and X is an integer from 0 upwards.
swordv2-server.versions.keep = true


swordv2-server.state.workspace.uri = http://dspace.org/state/inprogress
swordv2-server.state.workspace.description = The item is in the user workspace
swordv2-server.state.workflow.uri = http://dspace.org/state/inreview
swordv2-server.state.workflow.description = The item is undergoing review prior to acceptance to the archive
swordv2-server.state.archive.uri = http://dspace.org/state/archived
swordv2-server.state.archive.description = The item has been archived
swordv2-server.state.withdrawn.uri = http://dspace.org/state/withdrawn
swordv2-server.state.withdrawn.description = The item has been withdrawn from the archive and is no longer available


# URL template for items in the workspace (items in the archive will use the handle)
swordv2-server.workspace.url-template = ${dspace.ui.url}/workspaceitems/#wsid#/edit


# here dspace.cfg overriden
# Minimum number of idle connections in pool
# (default = 0)
db.minidle = 0

# The initial number of connections created when the pool is started
# (default = 0)
db.initialsize = 0

# The maximum lifetime in milliseconds of a connection.  (-1 = unlimited)
# (default = -1)
db.maxconnlifetime = -1

# Remove abandoned connections. This is documented under "removeAbandonedOnBorrow" in DBCP2.
# (default = false)
db.removeabandoned = false

# Remove abandoned timeout. Timeout in seconds before an abandoned connection can be removed.
# (default = 300 or 5 minutes)
db.removeabandonedtimeout = 300

# Set the default mail character set. This may be overridden by providing a line
# inside the email template "charset: <encoding>", otherwise this default is used.
mail.charset = UTF-8


# Logging configuration #####
# Main logging settings can be found in config/log4j2.xml
# below some configuration properties for the server webapp that can be modified at runtime
logging.server.include-after-request = false
logging.server.include-payload = false
logging.server.include-headers = false
logging.server.include-query-string = false
logging.server.include-client-info = false
logging.server.max-payload-length = 10000

# Credentials used to authenticate against the registration agency:
identifier.doi.user = UCSX.TEST-FAU
identifier.doi.password = test
# DOI prefix used to mint DOIs. All DOIs minted by DSpace will use this prefix.
# The Prefix will be assigned by the registration agency.
identifier.doi.prefix = 10.81092
# If you want to, you can further separate your namespace. Should all the
# suffixes of all DOIs minted by DSpace start with a special string to separate
# it from other services also minting DOIs under your prefix?
#identifier.doi.namespaceseparator = open-fau-
identifier.doi.namespaceseparator =

# Items in DSpace receive a unique URL, stored in dc.identifier.uri
# after it is generated during the submission process.
handle.canonical.prefix = ${dspace.ui.url}/handle/


# Directory for installing Handle server files
handle.dir = ${dspace.dir}/handle-server


# ------------------
# QueueTaskOnInstall
# ------------------

# Queue name for tasks when an item is installed
#custom-events.queue.install.name = continually

# Tasks to queue when an item is installed
#custom-events.queue.install.tasks = mapserie


# Event consumer configuration for 'on item install'
#event.consumer.install_curate.class = org.dspace.event.consumers.QueueTaskOnInstall
#event.consumer.install_curate.filters = Item+Install


# --------------------------
# QueueTaskOnBitstreamChange
# --------------------------

# Queue name for tasks when a bitstream changes
#custom-events.queue.bitstreamchange.name = continually

# Tasks to queue when a bitstream is changed (comma-separated)
#custom-events.queue.bitstreamchange.tasks = mapserie

# Bundles to ignore
#custom-events.queue.bitstreamchange.ignore_bundles = TEXT, THUMBNAIL

# Event consumer configuration for 'on bitstream change'
#event.consumer.bitstreamchange_curate.class = org.dspace.event.consumers.QueueTaskOnBitstreamChange
#event.consumer.bitstreamchange_curate.filters = Bundle|Bitstream+Add|Remove|Modify|Delete



# default synchronous dispatcher (same behavior as traditional DSpace)
event.dispatcher.default.class = org.dspace.event.BasicDispatcher

# Add doi here if you are using org.dspace.identifier.DOIIdentifierProvider to generate DOIs.
# Adding doi here makes DSpace send metadata updates to your doi registration agency.
# Add rdf here, if you are using dspace-rdf to export your repository content as RDF.
# event.dispatcher.default.consumers = authority, discovery, eperson, doi, bitstreamchange_curate, install_curate
#authority removed till bug fix for ORCID authority lookup / bitstreamchange_curate, install_curate used if run task on item submitted or bitstream changed
event.dispatcher.default.consumers = discovery, eperson, doi


# The noindex dispatcher will not create search or browse indexes (useful for batch item imports)
event.dispatcher.noindex.class = org.dspace.event.BasicDispatcher
event.dispatcher.noindex.consumers = eperson

# consumer to maintain the discovery index
event.consumer.discovery.class = org.dspace.discovery.IndexEventConsumer
event.consumer.discovery.filters = Community|Collection|Item|Bundle|Site+Add|Create|Modify|Modify_Metadata|Delete|Remove

# consumer related to EPerson changes
event.consumer.eperson.class = org.dspace.eperson.EPersonConsumer
event.consumer.eperson.filters = EPerson+Create

# consumer to update metadata of DOIs
event.consumer.doi.class = org.dspace.identifier.doi.DOIConsumer
event.consumer.doi.filters = Item+Modify_Metadata

# consumer to update the triplestore of dspace-rdf
event.consumer.rdf.class = org.dspace.rdf.RDFConsumer
event.consumer.rdf.filters = Community|Collection|Item|Bundle|Bitstream|Site+Add|Create|Modify|Modify_Metadata|Delete|Remove

# test consumer for debugging and monitoring
# event.consumer.test.class = org.dspace.event.TestConsumer
# event.consumer.test.filters = All+All

# consumer to maintain versions
event.consumer.versioning.class = org.dspace.versioning.VersioningConsumer
event.consumer.versioning.filters = Item+Install

# disable item versioning (enabled by default)
versioning.enabled = false

# authority consumer
event.consumer.authority.class = org.dspace.authority.indexer.AuthorityConsumer
event.consumer.authority.filters = Item+Modify|Modify_Metadata

# set to true to enable testConsumer messages to standard output
# testConsumer.verbose = true

# Embargo Settings
# DC metadata field to hold the user-supplied embargo terms  STELI added
embargo.field.terms = local.opusDocument.embargo_terms

# DC metadata field to hold computed "lift date" of embargo STELI
embargo.field.lift = local.opusDocument.embargo_date

# string in terms field to indicate indefinite embargo
embargo.terms.open = forever

# implementation of embargo setter plugin - replace with local implementation if applicable
plugin.single.org.dspace.embargo.EmbargoSetter = org.dspace.embargo.DefaultEmbargoSetter

# implementation of embargo lifter plugin - - replace with local implementation if applicable
plugin.single.org.dspace.embargo.EmbargoLifter = org.dspace.embargo.DefaultEmbargoLifter

# Item export and download settings
# The directory where the exports will be done and compressed
org.dspace.app.itemexport.work.dir = ${dspace.dir}/exports

# The directory where the compressed files will reside and be read by the downloader
org.dspace.app.itemexport.download.dir = ${dspace.dir}/exports/download

# The length of time in hours each archive should live for. When new archives are
# created this entry is used to delete old ones
org.dspace.app.itemexport.life.span.hours = 48

# Batch Item import settings
# The directory where the results of imports will be placed (mapfile, upload file)
org.dspace.app.batchitemimport.work.dir = ${dspace.dir}/imports


# Hide Item Metadata Fields
# Fields named here are hidden in the following places UNLESS the
# logged-in user is an Administrator:
#  1. REST API (and therefore UI)
#  2. RDF (every where as there is currently no possibility to authenticate)
#  3. OAI (every where as there is currently no possibility to authenticate)
#     Attention: You need to rebuild the OAI SOLR index after every change of
#     this property. Run [dspace-install]/bin/dspace oai import -c to do so.
#
# To designate a field as hidden, add a property here in the form:
#    metadata.hide.SCHEMA.ELEMENT.QUALIFIER = true


# Settings for Submission Process

# Whether or not we REQUIRE that a file be uploaded
# during the 'Upload' step in the submission process
# Defaults to true; If set to 'false', submitter has option to skip upload
webui.submit.upload.required = false

# Creative Commons settings

# The url to the web service API
cc.api.rooturl = http://api.creativecommons.org/rest/1.5

# Metadata field to hold CC license URI of selected license
# NB: DSpace (both JSPUI and XMLUI) presentation code expects 'dc.rights.uri' to hold CC data. If you change
# this to another field, please consult documentation on how to update UI configuration
cc.license.uri = dc.rights.uri

# Metadata field to hold CC license name of selected license (if defined)
# NB: DSpace (both JSPUI and XMLUI) presentation code expects 'dc.rights' to hold CC data. If you change
# this to another field, please consult documentation on how to update UI configuration
cc.license.name = dc.rights

# Assign license name during web submission
cc.submit.setname = true

# Store license bitstream (RDF license text) during web submission
# cc.submit.addbitstream = true
cc.submit.addbitstream = true

# A list of license classes that should be excluded from selection process
# class names - comma-separated list -  must exactly match what service returns.
# At time of implementation, these are:
# publicdomain - "Public Domain"
# standard - "Creative Commons"
# recombo - "Sampling"
# zero - "CC0"
# mark - "Public Domain Mark"
cc.license.classfilter = recombo, mark

# Jurisdiction of the creative commons license -- is it ported or not?
# Use the key from the url seen in the response from the api call,
# http://api.creativecommons.org/rest/1.5/support/jurisdictions
# Commented out means the license is unported.
# (e.g. nz = New Zealand, uk = England and Wales, jp = Japan)
# cc.license.jurisdiction = nz
cc.license.jurisdiction = de

# Locale for CC dialogs
# A locale in the form language or language-country.
# If no default locale is defined the CC default locale will be used
cc.license.locale = de

# Settings for Thumbnail creation 

# Maximum width and height (in pixels) of generated thumbnails
# NOTE: In the UI's base theme, `--ds-thumbnail-max-width` defaults to 175px.
# So, if you set 'thumbnail.maxwidth' >175, you may wish to modify that UI style variable as well.
thumbnail.maxwidth  = 175
thumbnail.maxheight = 175

# Blur before scaling.  A little blur before scaling does wonders for keeping
# more in check. (Only used by JPEGFilter)
thumbnail.blurring = true

# High quality scaling option.  Setting to true can dramatically increase
# image quality, but it takes longer to create thumbnails. (Only used by JPEGFilter)
thumbnail.hqscaling = true

# Settings for BrandedPreviewJPEGFilter
# max dimensions of the preview image
webui.preview.maxwidth = 600
webui.preview.maxheight = 600

# Blur before scaling.  A little blur before scaling does wonders for keeping
# moire in check.
webui.preview.blurring = true

# High quality scaling option.  Setting to true can dramatically increase
# image quality, but it will take much longer to create previews.
webui.preview.hqscaling = true

# the brand text
webui.preview.brand = FAU Repository

# an abbreviated form of the above text, this will be used
# when the preview image cannot fit the normal text
webui.preview.brand.abbrev = FAU

# the height of the brand
webui.preview.brand.height = 20

# font settings for the brand text
webui.preview.brand.font = SansSerif
webui.preview.brand.fontpoint = 12
# webui.preview.dc = rights

# Browse By: For compatibility with previous versions:
webui.browse.index.1 = dateissued:item:dateissued
webui.browse.index.2 = author:metadata:dc.contributor.author:text
#webui.browse.index.2 = author:metadataAuthority:dc.contributor.author:authority
webui.browse.index.3 = title:item:title
webui.browse.index.4 = subject:metadata:dc.subject:text
webui.browse.index.5 = ddc:metadata:dc.subject.ddc:text
webui.browse.index.6 = docType:metadata:dc.type:text
webui.browse.index.7 = dateaccessioned:item:dateaccessioned
webui.browse.index.8 = series:metadata:local.series.name:text
webui.browse.index.9 = chair:metadata:local.subject.fakultaet:text
webui.browse.index.10 = publisher:metadata:dc.publisher:text


# Set the options for what can be sorted by
webui.itemlist.sort-option.1 = title:dc.title:title
webui.itemlist.sort-option.2 = dateissued:dc.date.issued:date
webui.itemlist.sort-option.3 = docType:dc.type:text
webui.itemlist.sort-option.4 = dateaccessioned:dc.date.accessioned:date
webui.itemlist.sort-option.5 = series:local.series.name:text
webui.itemlist.sort-option.6 = chair:local.subject.fakultaet:text
webui.itemlist.sort-option.7 = publisher:dc.publisher:text


# Links to other browse context 
webui.browse.link.1 = author:dc.contributor.author
#webui.browse.link.2 = subject:dc.subject

# URLs returned by the feed will point at the global handle server
# (e.g. https://hdl.handle.net/123456789/1).  Set to true to use local server
# URLs (i.e. https://myserver.myorg/handle/123456789/1)
webui.feed.localresolve = true

# i18n -  Locales / Language
# Default Locale
# A Locale in the form country or country_language or country_language_variant
# if no default locale is defined the server default locale will be used.
default.locale = en, de

# All the Locales, that are supported by this instance of DSpace
# A comma-separated list of Locales. All types of Locales country, country_language, country_language_variant
# Note that the appropriate file are present, especially that all the Messages_x.properties are there
# may be used, e.g:
webui.supported.locales = en, de


# Content Inline Disposition Threshold 
#
# Set the max size of a bitstream that can be served inline
# Use -1 to force all bitstream to be served inline
webui.content_disposition_threshold = 8388608

# Sitemap settings
# the directory where the generated sitemaps are stored
sitemap.dir = ${dspace.dir}/sitemaps

# Comma-separated list of search engine URLs to 'ping' when a new Sitemap has
# been created.  Include everything except the Sitemap URL itself (which will
# be URL-encoded and appended to form the actual URL 'pinged').
sitemap.engineurls = http://www.google.com/webmasters/sitemaps/ping?sitemap=

# Define cron for how frequently the sitemap should refresh.
# Defaults to running daily at 1:15am
# Cron syntax is defined at https://www.quartz-scheduler.org/api/2.3.0/org/quartz/CronTrigger.html
# Remove (comment out) this config to disable the sitemap scheduler.
# Sitemap scheduler can also be disabled by setting to "-" (single dash) in local.cfg.
# Keep in mind, changing the schedule requires rebooting your servlet container, e.g. Tomcat.
sitemap.cron = 0 15 1 * * ?

# SHERPA/Romeo Integration Settings 
# The SHERPA/RoMEO endpoint (v2 API)
sherpa.romeo.url = https://v2.sherpa.ac.uk/cgi/retrieve

# Uncomment to enable ORCID authority control
plugin.named.org.dspace.content.authority.ChoiceAuthority = \
    org.dspace.content.authority.SampleAuthority = Sample, \
#    org.dspace.content.authority.SolrAuthority = SolrAuthorAuthority
#    org.dspace.content.authority.SHERPARoMEOPublisher = SRPublisher, \
#    org.dspace.content.authority.SHERPARoMEOJournalTitle = SRJournalTitle

# URL of ORCID API
# Defaults to using the Public API V3 (pub.orcid.org)
orcid.api-url = https://pub.orcid.org/v3.0
orcid.public-url = https://pub.orcid.org/v3.0
orcid.url = https://orcid.org/


# ORCID JWT Endpoint
orcid.oauth.url = https://orcid.org/oauth/token

# removed Steli, authority control plugins activated
plugin.selfnamed.org.dspace.content.authority.ChoiceAuthority = \
 org.dspace.content.authority.DCInputAuthority, \
 org.dspace.content.authority.DSpaceControlledVocabulary
 
# authority.minconfidence = ambiguous
 
# Configuration settings for ORCID based authority control, uncomment the lines below to enable configuration
#solr.authority.server = ${solr.server}/authority
#choices.plugin.dc.contributor.author = SolrAuthorAuthority
#choices.presentation.dc.contributor.author = authorLookup
#authority.controlled.dc.contributor.author = true

# added Steli: ORCID:dc.contributor.editor from ORCID -> modify also config/spring/api/oricd-authority-service.xml
#choices.plugin.dc.contributor.advisor = SolrAuthorAuthority
#choices.presentation.dc.contributor.advisor = authorLookup
#authority.controlled.dc.contributor.advisor = true

#choices.plugin.dc.contributor = SolrAuthorAuthority
#choices.presentation.dc.contributor = authorLookup
#authority.controlled.dc.contributor = true

#choices.plugin.dc.contributor.other = SolrAuthorAuthority
#choices.presentation.dc.contributor.other = authorLookup
#authority.controlled.dc.contributor.other = true

#authority.author.indexer.field.1 = dc.contributor.author
#authority.author.indexer.field.2 = dc.contributor.advisor
#authority.author.indexer.field.3 = dc.contributor
#authority.author.indexer.field.4 = dc.contributor.other


# mets.default.ingest.crosswalk.MODS = SWORD-MODS-INGEST
# mets.default.ingest.crosswalk.MODS = MODS
# file created in crosswalks, to map the sword (MODS-Metadata) to DSpaceMetadata
# crosswalk.submission.SWORD-MODS-INGEST.stylesheet= crosswalks/sword-mods-ingest.xsl
# crosswalk.submission.MODS.stylesheet = crosswalks/sword-mods-ingest.xsl


##########################
# SERVER CONFIGURATION   #
##########################

# DSpace installation directory.
# This is the location where you want to install DSpace.
# Windows note: Please remember to use forward slashes for all paths (e.g. C:/dspace)
dspace.dir=/usr/local/dspace

# URL of DSpace backend ('server' webapp). Include port number etc.
# DO NOT end it with '/'.
# This is where REST API and all enabled server modules (OAI-PMH, SWORD,
# SWORDv2, RDF, etc) will respond.
# recommended DSpace >  https://repotest.ub.fau.de/server
# dspace.server.url = https://repotest.ub.fau.de:443/server
dspace.server.url = https://repotest.ub.fau.de/server

# URL of DSpace frontend (Angular UI). Include port number etc.
# DO NOT end it with '/'.
# This is used by the backend to provide links in emails, RSS feeds, Sitemaps, etc.
dspace.ui.url = https://repotest.ub.fau.de
# use localhost => to debug ANGULAR
# dspace.ui.url = http://localhost:4000


# Name of the site
dspace.name = TEST-SERVER FAU REPOSITORY

# assetstore.dir, look at DSPACE/config/spring/api/bitstore.xml for more options
# default is ${dspace.dir}/assetstore, uncomment and modify if you need to use a different path
assetstore.dir = ${dspace.dir}/assetstore

# Default language for metadata values
# default.language = en_US
default.language = de

# Solr server/webapp.
# DSpace uses Solr for all search/browse capability (and for usage statistics).
# Since DSpace 7, SOLR must be installed as a stand-alone service
solr.server = http://localhost:8983/solr

##########################
# DATABASE CONFIGURATION #
##########################
# DSpace only supports two database types: PostgreSQL or Oracle

# URL for connecting to database
#    * Postgres template: jdbc:postgresql://localhost:5432/dspace
#    * Oracle template: jdbc:oracle:thin:@//localhost:1521/xe
db.url = jdbc:postgresql://localhost:5432/dspace

# JDBC Driver
#    * For Postgres: org.postgresql.Driver
#    * For Oracle:   oracle.jdbc.OracleDriver
db.driver = org.postgresql.Driver

# Database Dialect (for Hibernate)
#    * For Postgres: org.dspace.storage.rdbms.hibernate.postgres.DSpacePostgreSQL82Dialect
#    * For Oracle:   org.hibernate.dialect.Oracle10gDialect
# db.dialect = org.dspace.storage.rdbms.hibernate.postgres.DSpacePostgreSQL82Dialect
db.dialect = org.hibernate.dialect.PostgreSQL94Dialect

# Database username and password
db.username = dspace
db.password = dspace

# Database Schema name
#    * For Postgres, this is often "public" (default schema)
#    * For Oracle, schema is equivalent to the username of your database account,
#      so this may be set to ${db.username} in most scenarios.
db.schema = public

## Connection pool parameters

# Maximum number of DB connections in pool (default = 30)
# db.maxconnections = 30

# Maximum time to wait before giving up if all connections in pool are busy (milliseconds)
# (default = 5000ms or 5 seconds)
# db.maxwait = 5000

# Maximum number of idle connections in pool (-1 = unlimited)
# (default = 10)
# db.maxidle = 10


#######################
# EMAIL CONFIGURATION #
#######################

# SMTP mail server (allows DSpace to send email notifications)
mail.server = smtp.fau.de

# SMTP mail server authentication username and password (if required)
# mail.server.username = myusername
# mail.server.password = mypassword

# SMTP mail server alternate port (defaults to 25)
# mail.server.port = 465

# From address for mail
# All mail from the DSpace site will use this 'from' address
mail.from.address = test-repository-noreply@fau.de

# When feedback is submitted via the Feedback form, it is sent to this address
# Currently limited to one recipient!
# feedback.recipient = test-repository-help@fau.de
feedback.recipient = stelica.valianos@fau.de

# General site administration (Webmaster) e-mail
mail.admin = stelica.valianos@fau.de

# Recipient for server errors and alerts (defaults to mail.admin)
alert.recipient = ${mail.admin}

# Recipient for new user registration emails (defaults to unspecified)
# registration.notify =


########################
# HANDLE CONFIGURATION #
########################
#
# Canonical Handle URL prefix
#
# Items in DSpace receive a unique URL, stored in dc.identifier.uri
# after it is generated during the submission process.
#
# If you register with CNRI's handle service at http://www.handle.net/,
# these links can be generated as permalinks using http://hdl.handle.net/
# as canonical prefix. Please make sure to change handle.canonical.prefix
# after registering with handle.net by uncommenting one of the following
# lines, depending if you prefer to use http or https:
# handle.canonical.prefix = http://hdl.handle.net/
# handle.canonical.prefix = https://hdl.handle.net/
# Note that this will not alter dc.identifer.uri metadata for existing
# items (only for subsequent submissions), but it will alter the URL
# in JSPUI's 'identifier' message on item record pages for existing items.
# CNRI Handle prefix
# (Defaults to a dummy/fake prefix of 123456789)
handle.prefix = test-fau1743

#######################
# PROXY CONFIGURATION #
#######################
# Uncomment and specify both properties if proxy server is required for external http requests
# (e.g. requests from DSpace to third party services like Creative Commons use this setting when enabled)
# Use regular hostname without port number
# http.proxy.host =

# port number of proxy server
# http.proxy.port =

##########################
# AUTHENTICATION METHODS #
##########################

# added Steli, s.t. we can impersonate Eperson as Admin, to help debug
webui.user.assumelogin = true
# dont email in RSS feeds and Subscripton email, the new Items which are private
harvest.includerestricted.rss = false
harvest.includerestricted.subscription = false
# maximum size for exported item / or many items simultaneous exported <400
org.dspace.app.itemexport.max.size = 400


# EXAMPLE OVERRIDE:
# Override the default authentication method(s) defined in authentication.cfg
# by defining your own custom ordered list in this local.cfg.
#
# By default, all of these methods are commented out and DSpace will use the
# settings from authentication.cfg. But you may uncomment whichever plugins you
# need in order to change the default settings (or reorder them below).
#
# You may also copy default settings from the corresponding authentication-*.cfg
# configuration file and override them in this local.cfg.

# IP-based authentication/authorization. See authentication-ip.cfg for default configuration.
# plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.IPAuthentication

# LDAP authentication/authorization. See authentication-ldap.cfg for default configuration.
# plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.LDAPAuthentication

# Shibboleth authentication/authorization. See authentication-shibboleth.cfg for default configuration.
# Check also the cors settings below
# plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.ShibAuthentication

# X.509 certificate authentication. See authentication-x509.cfg for default configuration.
# plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.X509Authentication

# Authentication by Password (encrypted in DSpace's database). See authentication-password.cfg for default configuration.
# Enabled by default in authentication.cfg
# plugin.sequence.org.dspace.authenticate.AuthenticationMethod = org.dspace.authenticate.PasswordAuthentication

#####################
# REST API SETTINGS #
#####################
# Allowed Cross-Origin-Resource-Sharing (CORS) origins (in "Access-Control-Allow-Origin" header).
# Only these origins (client URLs) can successfully authenticate with your REST API.
# Defaults to ${dspace.ui.url} if unspecified (as the UI must have access to the REST API).
# Multiple allowed origin URLs may be comma separated. Wildcard value (*) is NOT SUPPORTED.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
# When an external authentication system is involved like Shibboleth some browsers (i.e. Safari) include
# in the request the Origin header with the url of the IdP. In such case you need to allow also the IdP to
# avoid trouble for such browsers (i.e.  rest.cors.allowed-origins = ${dspace.ui.url}, https://samltest.id )
rest.cors.allowed-origins = ${dspace.ui.url}, http://localhost:4000, localhost:4000, http://localhost, localhost, https://samltest.id, http://api.creativecommons.org/rest/1.5, repotest.ub.fau.de, http://repotest.ub.fau.de


#################################################
# SPRING BOOT SETTINGS (Used by Server Webapp)  #
#################################################
# NOTE: Common Spring Boot application settings may be found at
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
# EXAMPLE OVERRIDE:
# By uncommenting the below Spring Boot settings, you can increase or decrease the maximum upload size.
# These defaults are specified in [dspace-src]/dspace-server-webapp/src/main/resources/application.properties
# but may be overridden in this local.cfg
#
# Maximum size of a single uploaded file
spring.servlet.multipart.max-file-size = 50MB

# Maximum size of a multipart request (i.e. max total size of all files in one request)
spring.servlet.multipart.max-request-size = 100MB

#restrict domain from which new users are able to register/login
#authentication.password.domain.valid = @fau.de, .fau.de

# Required to use "Impersonate EPerson" feature
# When enabled, a full Administrator can impersonate any other non-Administrative user
webui.user.assumelogin = true

#allow to register/login only emails from the following domains:
#authentication-password.domain.value = @fau.de, @uni-erlangen.de, @uk-erlangen.de

#put users by login in this group (only for email login):
#authentication-password.login.specialgroup = Anonymous

#verify user is not a bot at registration
registration.verification.enabled = true 
#via Google reCaptcha v3
google.recaptcha.version = v3
google.recaptcha.key.site = 6LfWrEkjAAAAAJKAe7cGjFe7oA79LPrKatIZzebd
google.recaptcha.key.secret = 6LfWrEkjAAAAANej81-5ImxGNiORLZtAzJKEF_YL 
google.recaptcha.site-verify = https://www.google.com/recaptcha/api/siteverify
google.recaptcha.key.threshold = 0.5
google.recaptcha.mode = invisible
